{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/promotions.js","redux/comments.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","to","id","width","CardImgOverlay","tag","Menu","dishes","menu","map","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleBlur","field","evt","setState","touched","state","handleInputChange","bind","handleSubmit","event","target","value","type","checked","this","values","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","errors","split","filter","x","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","Button","color","Component","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","CommentForm","toggleModal","isModalOpen","rating","Fragment","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","Select","Text","Textarea","DishDetail","RenderLeader","Media","left","middle","object","body","heading","About","leaders","CardHeader","title","list","Header","toggleNav","isNavOpen","handleLogin","alert","username","password","remember","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","ActionTypes","dishesFailed","errmess","payload","addDishes","commentsFailed","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","addComments","promosLoading","promosFailed","addPromos","promos","addLeaders","leadersLoading","leadersFailed","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","classNames","timeout","path","component","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","actions","reset","newFeedback","feedback","Dishes","action","Promotions","Comments","concat","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da9fd21c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport {Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>:null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nconst Home = (props) => {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Card,  CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({dish}){\r\n        return (\r\n                <Card>  \r\n                    <Link to={`/menu/${dish.id}`}>                     \r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />                                               \r\n                        <CardImgOverlay>\r\n                            <CardTitle tag=\"h3\" >{dish.name}</CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Link>\r\n                </Card>\r\n        );\r\n    }\r\n    \r\n    const Menu = (props) => {\r\n         \r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            const menu = props.dishes.dishes.map((dish)=>{\r\n                return (\r\n                    <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                        <RenderMenuItem dish={dish}/>\r\n                    </div>\r\n                );\r\n            });\r\n            \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to='/home'>Home</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div> \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n        \r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row,  } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, Form , Errors} from 'react-redux-form';\r\n \r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if (this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {        \r\n        //const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                                <Breadcrumb>                                \r\n                                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                                </Breadcrumb>\r\n                                <div className=\"col-12\">\r\n                                    <h3>Contact Us</h3>\r\n                                    <hr />\r\n                                </div>\r\n                            </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <button className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</button>\r\n                            <button className=\"btn btn-info\" href=\"#\" ><i className=\"fa fa-skype\"></i> Skype</button>\r\n                            <button className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3),maxLength:maxLength(15)\r\n                                        }}\r\n                                       />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                           <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3),maxLength:maxLength(15)\r\n                                        }}\r\n                                       />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3),maxLength:maxLength(15), isNumber\r\n                                        }}\r\n                                       />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />                                                                      \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                       />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />       \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">                                        \r\n                                        <Control.checkbox model=\".agree\" \r\n                                            name=\"agree\"\r\n                                            className=\"form-check-input\"\r\n                                                /> {' '}\r\n                                        <strong>May we contact you?</strong>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                            className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport {Modal, ModalHeader, ModalBody, Button, Card, CardBody, CardImg, CardText, CardTitle, Breadcrumb, BreadcrumbItem, Row, Label, Col } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, LocalForm , Errors} from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Stagger } from 'react-animation-components';\r\n\r\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n    const minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\n    function RenderComments({comments, postComment, dishId}){\r\n        if(comments) {\r\n            return( \r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <h4>Comments</h4>\r\n                        <ul className='list-unstyled'>\r\n                            {\r\n                                <Stagger in>\r\n                                    {comments.map((comment)=> {\r\n                                        return ( <li key={comment.id}>\r\n                                                    <div>                                                    \r\n                                                        <p>{comment.comment}</p>                                                                                                        \r\n                                                        <div>-- {comment.author} , {new Intl.DateTimeFormat('en-US',{year:'numeric',month:'short',day:'2-digit'}).format(new Date(Date.parse(comment.date)))}</div>                                                    \r\n                                                        <br/>\r\n                                                    </div>\r\n                                                </li>\r\n                                        )\r\n                                    })}\r\n                                </Stagger>\r\n                            }\r\n                        </ul>\r\n                        <CommentForm dishId={dishId} postComment={postComment} />\r\n                    </div>\r\n            );  \r\n        }          \r\n        return null;\r\n    }\r\n\r\n    function RenderDish({dish}){\r\n        if(dish) {        \r\n            return ( \r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                         <FadeTransform\r\n                                in\r\n                                transformProps={{\r\n                                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                                }}>\r\n                                <Card>                       \r\n                                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />                       \r\n                                    <CardBody>\r\n                                        <CardTitle tag=\"h3\">{dish.name}</CardTitle>\r\n                                        <CardText>{dish.description}</CardText>\r\n                                    </CardBody>\r\n                                </Card>\r\n                        </FadeTransform>\r\n                    </div>\r\n            );\r\n        }\r\n        return null\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish){\r\n            return (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Breadcrumb>                                \r\n                                <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className=\"col-12\">\r\n                                <h3>{props.dish.name}</h3>\r\n                                <hr />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <RenderDish dish={props.dish} />\r\n                            <RenderComments comments={props.comments} \r\n                                            postComment={props.postComment}\r\n                                            dishId={props.dish.id} />\r\n                        </div>\r\n                    </div>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    class CommentForm extends Component {\r\n\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {      \r\n                isModalOpen: false\r\n            };\r\n\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n        }\r\n\r\n        toggleModal = () => {\r\n            this.setState({\r\n              isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n\r\n        handleSubmit = (values) => {\r\n            this.toggleModal();\r\n            //this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        }\r\n\r\n        render(){\r\n            return (\r\n                <React.Fragment>                    \r\n                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <Col>\r\n                                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"rating\" >Rating</Label>\r\n                                        <Control.Select id=\"rating\" name=\"rating\" \r\n                                            model=\".rating\"\r\n                                            className=\"form-control\">\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>                                            \r\n                                        </Control.Select>                                        \r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"author\" >Your Name</Label>\r\n                                        <Control.Text id=\"author\" name=\"author\" \r\n                                            model=\".author\"\r\n                                            placeholder=\"Your Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                minLength:minLength(2),maxLength:maxLength(15)                                                \r\n                                            }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".name\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'                                        \r\n                                            }}\r\n                                        />\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Label htmlFor=\"comment\" >Comment</Label>\r\n                                        <Control.Textarea id=\"comment\" name=\"comment\" \r\n                                            model=\".comment\"\r\n                                            placeholder=\"\"\r\n                                            className=\"form-control\"\r\n                                            rows=\"6\"\r\n                                            validators={{\r\n                                            }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".comment\"\r\n                                            show=\"touched\"\r\n                                            messages={{                                                \r\n                                            }}\r\n                                        />\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                                    </Row>\r\n                                </LocalForm>\r\n                            </Col>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}){   \r\n    return (        \r\n        <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                <Media heading>{leader.name}</Media>\r\n                <p><Media>{leader.designation}</Media></p>\r\n                <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction About(props) {\r\n\r\n    if (props.leaders.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.leaders.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {        \r\n        const leaders = props.leaders.leaders.map((leader) => {\r\n            return (\r\n                <RenderLeader leader={leader} />\r\n            );\r\n        });\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                            <Stagger in>\r\n                                {leaders}\r\n                            </Stagger>\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;    ","import React, {Component} from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport {NavLink} from  'react-router-dom';\r\n\r\nclass Header extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        \r\n    }\r\n\r\n    toggleNav = () => {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                alt=\"Ristorante Con Fusion!\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>                                \r\n                            </Nav>\r\n                        </Collapse>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12  col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the world's best cuisines, and create a unique fusion experience. Our lipsmacking creation will tickle your culinary sense!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n// export const addComment = (dishId, rating, author, comment) => ({\r\n//     type: ActionTypes.ADD_COMMENT,\r\n//     payload: {\r\n//         dishId: dishId,\r\n//         rating: rating,\r\n//         author: author,\r\n//         comment: comment\r\n//     }\r\n// });\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n  dispatch(leadersLoading(true));\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())  \r\n  .then(feedback => alert(JSON.stringify(feedback)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport About from './AboutComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter} from  'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos,fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => ({\r\n    dishes:state.dishes,\r\n    comments:state.comments,\r\n    promotions:state.promotions,\r\n    leaders:state.leaders\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({  \r\n  fetchDishes: () =>  dispatch(fetchDishes()),\r\n  resetFeedbackForm: () => dispatch(actions.reset('feedback')),\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),  \r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch (postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n})\r\n\r\nclass Main extends Component {  \r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish)=> dish.featured)[0]} \r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishesErrMess={this.props.dishes.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promo)=> promo.featured)[0]}\r\n            promoLoading={this.props.promotions.isLoading}\r\n            promoErrMess={this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter((leader)=> leader.featured)[0]}    \r\n            leaderLoading={this.props.leaders.isLoading}\r\n            leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return (\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish)=> dish.id === parseInt(match.params.dishId,10))[0]}\r\n                isLoading={this.props.dishes.isLoading}\r\n                errMess={this.props.dishes.errMess} \r\n                comments={this.props.comments.comments.filter((comment)=> comment.dishId === parseInt(match.params.dishId,10))}\r\n                commentsErrMess={this.props.comments.errMess}\r\n                postComment={this.props.postComment}\r\n          />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>    \r\n        <Header />  \r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch>\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />      \r\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n                <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} \r\n                                                                         postFeedback={this.props.postFeedback} />} />\r\n                <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>        \r\n        <Footer />\r\n      </div>\r\n    );\r\n  }  \r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport  const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n  \r\n      case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n  \r\n      case ActionTypes.ADD_COMMENT:\r\n          var comment = action.payload;\r\n          return { ...state, comments: state.comments.concat(comment)};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import * as ActionTypes from './ActionTypes';\r\n\r\nexport  const Leaders = (state = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport  {BrowserRouter } from 'react-router-dom';\nimport  {Provider} from 'react-redux';\nimport  {ConfigureStore} from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {    \n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>  \n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }  \n}\n\nexport default App;\n","import {createStore, combineReducers,  applyMiddleware  } from 'redux';\r\nimport { Dishes } from  './dishes';\r\nimport { Promotions } from  './promotions';\r\nimport { Comments } from  './comments';\r\nimport { Leaders } from  './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}